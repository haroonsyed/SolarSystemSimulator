#version 430 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(std140, binding = 1) buffer screenData {

  float luminance;
  uint width;
  uint height;
  uint percentRangeFromCenterForLuminanceCalc;

};
layout (rgba32f, binding = 2) uniform image2D hdrImage;
layout (rgba32f, binding = 3) uniform image2D blurBuffer;

void main() {

  // Use all light above threshold for bloom
  float threshold = luminance * 2.0;

  ivec2 pixelPosition = ivec2(gl_GlobalInvocationID.xy);
  vec4 pixelRaw = imageLoad(hdrImage, pixelPosition);
  vec3 pixelColor = pixelRaw.xyz;

  // According to CIE xyY color space
  float internalLuminance = pixelColor.x * 0.4125 + pixelColor.y * 0.3154 + pixelColor.z * 0.2721;

  if(internalLuminance > threshold) {
    imageStore(blurBuffer, pixelPosition, pixelRaw );
  } 
  else {
    imageStore(blurBuffer, pixelPosition, ivec4(0,0,0,0) );
  }
  barrier();

  // Now blur everything in the blurBuffer


}


