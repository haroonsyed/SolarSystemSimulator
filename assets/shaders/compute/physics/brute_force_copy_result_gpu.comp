#version 430 core

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

struct Body {
	vec4 position;
	vec4 velocity;
	float mass;
	uint align1;
	int align2;
	int align3;
};

layout(std430, binding = 4) buffer bodiesBuffer {

  Body bodies[];

};

readonly layout(std430, binding = 6) buffer bodiesOutputBuffer {

  Body bodiesOutput[];

};

uniform uint bodySize;

void main() {

	const uint gid = gl_GlobalInvocationID.x;

	if(gid >= bodySize) {
		return;
	}

	bodies[gid].position.xy = bodiesOutput[gid].position.xy;
	bodies[gid].velocity.xy = bodiesOutput[gid].velocity.xy;

}


