#version 430 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

struct Body {
  vec4 position;
  vec4 velocity;
  float mass;
};

struct TreeCell {
  vec4 position;
  vec4 velocity;
  float mass;
  int childIndex; // Is used to indicate lock and state of the cell
                  // -1: Unlocked/null (insert body here)
                  // -2: Locked (try again)
                  // pos #: Non-leaf node (Continue traversal)
};

coherent layout(std430, binding = 5) buffer treeBuffer {

  TreeCell tree[];

};

coherent layout(std430, binding = 6) buffer testBuffer {

  float nums[];

};

void main() {

  uint gid = gl_GlobalInvocationID.x;
  TreeCell cell = tree[gid];
  tree[gid].mass = -1;
  tree[gid].childIndex = -1;

}


