#version 430 core

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

const unsigned int bodiesPerCell = 1;

struct Body {
	vec4 position;
	vec4 velocity;
	float mass;
	int align1;
	int align2;
	int align3;
};

struct TreeCell {
	Body bodies[bodiesPerCell];
	vec4 COM;
	int lock;		// Is used to indicate lock and state of the cell
					// -1: Unlocked
					// -2: Not leaf node (continue traversal)
                    // natural number: locked
	int numberOfBodies;
	float mass;
};

layout(std430, binding = 5) buffer treeBuffer {

  TreeCell tree[];

};

void main() {

  const uint gid = gl_GlobalInvocationID.x;

  tree[gid].lock = -1;
  tree[gid].numberOfBodies = 0;
  tree[gid].mass = 0.0;
  tree[gid].COM.xy = vec2(0.0);

}


