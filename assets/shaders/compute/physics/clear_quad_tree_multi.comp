#version 430 core

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

uniform unsigned int bodiesPerCell = 5;

struct Body {
	vec4 position;
	vec4 velocity;
	float mass;
};

struct TreeCell {
	Body bodies[bodiesPerCell];
	int lock;		// Is used to indicate lock and state of the cell
					// -1: Unlocked
					// -2: Not leaf node (continue traversal)
                    // natural number: locked
	int numberOfBodies;
};

coherent layout(std430, binding = 5) buffer treeBuffer {

  TreeCell tree[];

};

void main() {

  uint gid = gl_GlobalInvocationID.x;
  TreeCell cell = tree[gid];

  cell.lock = -1;
  cell.numberOfBodies = 0;

  tree[gid] = cell;

}


