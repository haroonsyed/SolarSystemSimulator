#version 430 core
#extension GL_ARB_compute_shader : enable
#extension GL_ARB_shader_storage_buffer_object : enable

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

struct Body {
  vec3 position;
  vec3 velocity;
  float mass;
}

struct TreeCell {
  Body body;
  int childIndex; // Is used to indicate lock and state of the cell
                  // -1: Unlocked/null (insert body here)
                  // -2: Locked (try again)
                  // -3: Leaf node (Insert body and the body at the cell here to children)
                  // pos #: Non-leaf node (Continue traversal)
}

readonly layout(std140, binding = 4) buffer bodiesBuffer {

  Body bodies[];

};

coherent layout(std140, binding = 5) buffer treeBuffer {

  TreeCell tree[];

};

void main() {

  uint gid = gl_GlobalInvocationID.x;
  
  // This will be the body this invocation will place in tree
  Body body = bodies[gid];
  



}


